install.packages("mlr")
install.packages("mlr")
install.packages("mgcv", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(purrr)
mtcars %>%
split(.$cyl) %>%
map(~ lm(mpg ~ wt, data = .)) %>%
map(summary) %>%
map_dbl("r.squared")
library(purrr)
mtcars %>%
split(.$cyl) %>%
map(~ lm(mpg ~ wt, data = .)) %>%
map(summary) %>%
map("r.squared")
choose(10, 2)
zeilen_ja <- tips$sex == "Female"
library(readr)
tips <- read_delim("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/tips.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(tips)
zeilen_ja <- tips$sex == "Female"
tips4 <- tips[, zeilen_ja]
tips4 <- tips[zeilen_ja, ]
tips5 <- tips[-zeilen_ja, ]
tips5 <- tips[!zeilen_ja, ]
zeilen <- c(1,2,3)
tips6 <- tips[-zeilen, ]
tips2 <- tips[!vars_ja]  # entweder so
vars_ja <- c("tip", "total_bill", "sex")
tips2 <- tips[!vars_ja]  # entweder so
tips2 <- tips[, !vars_ja]  # entweder so
library(dplyr)
tips %>% select(matches(vars_ja))
tips %>% select(vars_ja)
tips %>% select(dplyr::matches(vars_ja))
meine_auswahl <- c("tips", "total_bill")
select(tips, one_of(meine_auswahl)
)
tips2 <- select(tips, one_of(meine_auswahl))
meine_auswahl <- c("tip", "total_bill")
tips2 <- select(tips, one_of(meine_auswahl))
meine_auswahl <- names(tips)
meine_auswahl
tips2 <- select(tips, one_of(meine_auswahl))
tips2 <- select_(tips, meine_auswahl)
str(meine_auswahl)
meine_auswahl <- c("tip", "total_bill")
str(meine_auswahl)
tips2 <- select_(tips, .dots = meine_auswahl)
meine_auswahl <- names(tips)
str(meine_auswahl)
tips2 <- select_(tips, .dots = meine_auswahl)
library(readr)
read_tsv(http://www.stat.ufl.edu/~winner/data/hairtemp.dat)
read_tsv("http://www.stat.ufl.edu/~winner/data/hairtemp.dat")
df <- read_tsv("http://www.stat.ufl.edu/~winner/data/hairtemp.dat")
data <- read_tsv("http://www.stat.ufl.edu/~winner/data/hairtemp.dat")
glimpse(data)
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat")
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "\t")
delim = "  ")
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "  ")
glimpse(data)
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "     ")
glimpse(data)
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "\t")
data <- read_delim("http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "      ")
data <- read_delim(file = "http://www.stat.ufl.edu/~winner/data/hairtemp.dat",
delim = "  \t\t\t")
glimpse(data)
View(data)
data <- read_table(file = "http://www.stat.ufl.edu/~winner/data/hairtemp.dat")
glimpse(data)
str(data)
names(data) <- c("month", "temp", "facial_hair")
str(data)
install.packages("PairedData")
library(PairedData)
data(Anorexia)
str(Anorexia)
?.test
?t.test
t.test(x = Prior, y = Post, paired = TRUE)
t.test(x = Prior, y = Post, data = data, paired = TRUE)
t.test(x = Prior, y = Post, data = Anorexia, paired = TRUE)
t.test(x = Prior, y = Post, data = Anorexia, paired = TRUE)
t.test(x = Anorexia$Prior, y = Anorexia§$Post, paired = TRUE)
t.test(x = Anorexia$Prior, y = Anorexia$Post, paired = TRUE)
library(Rcmdr)
t.test(x = Anorexia$Prior, y = Anorexia$Post, paired = TRUE)
library(PairedData)
data(Anorexia)
str(Anorexia)
qqplot(Anorexia$Prior)
qqnorm(Anorexia$Prior)
library(car)
fit <- lm(mpg~disp+hp+wt+drat, data=mtcars)
outlierTest(fit) # Bonferonni p-value for most extreme obs
qqPlot(fit, main="QQ Plot") #qq plot for studentized resid
leveragePlots(fit) # leverage plots
hist(summary(fit)$residuals)
qqplot(summary(lm1)$residuals)
qqplot(summary(fit)$residuals)
str(summary(fit))
str(fit)
qqplot(fit$residuals, fit$fitted.values)
qqplot(fit$fitted.values, fit$residuals)
qqline()
qqline(fit$fitted.values)
qqplot(fit$fitted.values, fit$residuals)
qqline(fit$fitted.values)
qqline(fit$fitted.values, add = TRUE)
qqplot(fit$fitted.values, fit$residuals)
qqline(fit$fitted.values)
qqPlot(fit$fitted.values, fit$residuals)
qqPlot(fit)
hist(fit$residuals)
qqplot(fit$fitted.values, fit$residuals)
hist(summary(fit)$residuals)
hist(fit$residuals)
plot(fit)
qqplot(fit$fitted.values, fit$residuals)
plot(fit$fitted.values, fit$residuals)
plot(fit)
plot(predict(fit), rstudent(fit))
plot(fit$fitted.values, rstudent(fit))
plot(predict(fit), rstudent(fit))
qqnorm(fit)
qqnorm(Anorexia$Priors)
qqnorm(Anorexia$Prior)
qqline(Anorexia$Prior)
av.Plots(fit)
library(car)
av.Plots(fit)
influencePlot(fit)
library(purrr)
library(ggplot2)
library(dplyr)
library(broom)
library(knitr)  # for kable
data(Fair, package = "Ecdat") # extramarital affairs dataset
glimpse(Fair)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map_dbl("r.squared") %>%
tidy %>%
dplyr::arrange(desc(x)) %>%
rename(r.squared = x) -> r2s
kable(r2s)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_df(8)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_df()
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_df(1)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_dbl(1)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients"))
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_dbl(8)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_df(8)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map_df(c("coefficients"))
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients"))
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map_dbl("Estimate")
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map("Estimate")
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map(8)
Fair %>%
dplyr::select(-nbaffairs) %>%  # exclude outcome, leave only predictors
map(~lm(Fair$nbaffairs ~ .x, data = Fair)) %>%
map(summary) %>%
map(c("coefficients")) %>%
map(c(2,4))
x <- c(19, 23, 24, 31, 32, 43, 51, 54, 54)(mean(x)
x <- c(19, 23, 24, 31, 32, 43, 51, 54, 54)
x <- c(19, 23, 24, 31, 32, 43, 51, 54, 54)
mean(x)
library(mosaic)
data(tips, package = "reshape2")
mean(tip ~ sex, data = tips)
mean(x)
x <- c(1, 2, 3, 3, 4)
mw <- mean(x)
delta_ma <- mean(x-mw)
delta_mw <- x-mw
delta_mw
sd(tip ~ sex, data = tips)
library(ggplot2)
data(mtcars)
ggplot(mtcars, aes(x = mpg, y = cyl)) + geom_point()
library(ggplot2)
data(mtcars)
ggplot(mtcars, aes(x = mpg, y = cyl)) + geom_point()
install.packages("ggplot2")
install.packages(c("bst", "citr", "curl", "ezknitr", "gld", "haven", "irlba", "janeaustenr", "lavaan", "MBESS", "mongolite", "pbapply", "plotly", "R.utils", "rio", "shinydashboard", "slam", "sourcetools", "waffle"))
P_B = 0.1 + 0.4
P_B = (0.1 + 0.4) / 1
P_E <- (0.4*0.3) + (0.6*0.7)
P_E <- (0.4*0.3) + (0.6*0.7)
k <- (P_B - P_E) / (1 - P_E)
P_B <- (0.3 + 0.4) / 1
P_E <- (0.4*0.5) + (0.6*0.5)
k <- (P_B - P_E) / (1 - P_E)
U <- (8+6) / 20
U
uis <- read.csv("~/Downloads/uis.csv")
View(uis)
library(dplyr)
uis %>%
select(BECK, HC) %>%
group_by(HC) %>%
summarise(mean_grou = mean(HC))
uis %>%
select(BECK, HC) %>%
group_by(HC) %>%
summarise(mean_grou = mean(BECK))
uis %>%
select(BECK, HC) %>%
group_by(HC) %>%
summarise(mean_group = mean(BECK)) -> uis_summary_1
View(uis_summary_1)
library(ggplot2)
data(mtcars)
str(mtcars)
qplot(mtcars, x = hp, y = mpg, geom = "point")
library(ggplot2)
qplot(mtcars, x = hp, y = mpg, geom = "point")
data(mtcars)
qplot(mtcars, x = hp, y = mpg, geom = "point")
str(mtcars)
extra_WS16 <- read.csv("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/extra_WS16.csv")
View(extra_WS16)
library(dplyr)
extra_WS16 %>%
count(Beschreibung)
data(tips, package = "reshape2")
library(ggplot2)
ggplot(data = tip, aes(x = day)) + geom_bar()
ggplot(data = tips, aes(x = day)) + geom_bar()
library(mosaic)
bargraph(~ size, data=tips)
bargraph(~ day, data=tips)
bargraph(sex ~ day, data=tips)
tips <- read.csv2("~/Dropbox/__Lehre__/Fo-Meth/Datenanalyse-mit-R/Daten/tips.csv")
View(tips)
quantile(tips$tip)
quantile(tips$tip, probs = c(0.33, .66, .98))
extra_WS16 <- read.csv("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/extra_WS16.csv")
View(extra_WS16)
mean(extra_WS16)
mean(extra_WS16$Facebook)
mean(extra_WS16$Facebook, na.rm = TRUE)
quantile(extra_WS16$Facebook)
quantile(extra_WS16$Facebook, na.rm = TRUE)
hist(extra_WS16$Facebook)
library(mosaic)
histogram(extra_WS16$Facebook)
z_wert <- (70000-40000) / 20000
z_wert
pnorm(z_wert)
pnorm(1.5)
qnorm(.9)
qnorm(.5)
pnorm(2)
pnorm(1)
hist(extra_WS16$Facebook)
histogram(extra_WS16$Facebook)  # alternativer Befehl für Histogramm
x <- 1:10
x
quantile(x)
boxplot(x)
install.packages("tint")
install.packages("yarrr")
install.packages("tufte")
mydf <- data.frame(
b = rbinom(1000, 1, .5),
id = 1:1000
)
View(mydf)
mydf$rollsum <- cumsum(mydf$b)
mydf$rollmean <- mydf$rollsum / mydf$id
library(mosaic)
xyplot(rollmean ~ id, data = mydf)
mydf <- data.frame(
b = rbinom(100000, 1, .5),
id = 1:100000
)
mydf$rollsum <- cumsum(mydf$b)
mydf$rollmean <- mydf$rollsum / mydf$id
library(mosaic)
xyplot(rollmean ~ id, data = mydf)
xyplot(rollmean ~ id, data = mydf)
plot(x = id, y = rollmean, data = mydf)
tips <- read.csv2("~/Dropbox/__Lehre__/Fo-Meth/Datenanalyse-mit-R/Daten/tips.csv")
View(tips)
tally(sex ~ smoker, data = tips, format = "count")
tally( ~ smoker | sex, data = tips, format = "percent")
tally( ~ smoker | sex, data = tips, format = "count")
tally(sex ~ smoker | time, data = tips, format = "count")
bargraph(sex ~ smoker, data = tips, format = "count")
bargraph(sex ~ smoker, data = tips)
bargraph( ~ smoker | sex, data = tips, format = "count")
bwplot(tip ~ time | smoker, data = tips)
smoke <- matrix(c(173, 24, 1321, 1619),   nrow = 2)
smoke
library(mosaic)
oddsRatio(smoke)
smoke <- matrix(c(1321, 1619, 173, 24),   nrow = 2)
smoke
oddsRatio(smoke)
Affairs <- read.csv2("~/Dropbox/__Lehre__/Fo-Meth/Datenanalyse-mit-R/Daten/Affairs.csv")
View(Affairs)
tab_kids_affair <- tally(affairs ~ children, data = affair)
tab_kids_affair <- tally(affairs ~ children, data = Affair)
tab_kids_affair <- tally(affairs ~ children, data = Affairs)
tab_kids_affair
mosaicplot(tab_kids_affair)
tab_kids_gender <- tally(gender ~ children, data = Affairs)
moscaiplot(tab_kids_gender)
mosaicplot(tab_kids_gender)
tab_kids_affair
tab_kids_affair <- tally(affairs ~ children, data = Affairs)
tab_kids_affair
tab_kids_affair <- tally(affairs ~ children, data = Affairs, format = "percent")
tab_kids_affair
tab_kids_affair <- tally(affairs ~ children, data = Affairs, format = "proportion")
tab_kids_affair
tab_kids_gender <- tally(gender ~ children, data = Affairs)
tab_kids_gender
mosaicplot(tab_kids_gender)
tab_kids_gender <- tally(gender ~ affairs, data = Affairs)
tab_affairs_gender <- tally(gender ~ affairs, data = Affairs)
tab_affairs_gender
mosaicplot(tab_affairs_gender)
24/1619
1619/24
nr_r_ges_zu_krank <- 1619/24
nr_r_ges_zu_krank
1321/173
24+1619
24/(1619+24)
173+1321
anz_nichtraucher <- 173+1321
173/anz_nichtraucher
smoke <- matrix(c(173, 24, 1321, 1619),   nrow = 2)
smoke
oddsRatio(smoke)
titanic_train <- read.csv("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/titanic_train.csv", sep=";")
View(titanic_train)
tally(Pclass ~ Survived, data = titanic_train)
(136/80) / (119 / 372)
OR <- (136/80) / (119 / 372)
Or
OR
titanic_tab <- matrix(c(173, 24, 1321, 1619),   nrow = 2)
smoke
titanic_tab <- matrix(c(119, 136, 372, 80),   nrow = 2)
titanic_tab
oddsRatio(titanic_tab)
smoke <- matrix(c(173, 24, 1321, 1619),   nrow = 2)
smoke
z1 <- 1321
z2 <- 173
z3 <- 1619
z4 <- 24
Chance_Raucher_gesund <- (z1/z2)
Chance_Raucher_gesund
Chance_NRaucher_gesund <- (z3/z4)
Chance_NRaucher_gesund
OR <- Chance_Raucher_gesund / Chance_NRaucher_gesund
OR
OR <- Chance_NRaucher_gesund / Chance_Raucher_gesund
OR
library(xtable)
xtable(smoke)
smoke_df <- data.frame(
Raucher = c(Raucher, NRaucher),
krank = c(24, 173),
gesund = c(1619, 3121)
)
smoke_df <- data.frame(
Raucher = c("Raucher", "NRaucher"),
krank = c(24, 173),
gesund = c(1619, 3121)
)
xtable(smoke_df)
xtable(smoke_df)
smoke_df <- data.frame(
Raucher = c("Raucher", "NRaucher"),
krank = as.integer(c(24, 173)),
gesund = c(1619, 3121)
)
smoke_df <- data.frame(
Raucher = c("Raucher", "NRaucher"),
krank = as.integer(c(24, 173)),
gesund = as.integer(c(1619, 3121))
)
xtable(smoke_df)
smoke_df <- data.frame(
Raucher = c("Raucher", "NRaucher"),
krank = as.integer(c(24, 173)),
gesund = as.integer(c(1619, 1321))
)
xtable(smoke_df)
library(earth)  # für Titanic-Datensatz
data(etitanic)
setwd("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht")
write.csv(etitanic, file = "titanic.csv")
write.cav(Affairs, file = "Affairs.csv")
write.csv(Affairs, file = "Affairs.csv")
write.csv(tips, file = "tips.csv")
tally(pclass ~ survived, data = etitanic)
library(dplyr)
filter(etitanic, pclass == "1st", pclass == "3rd")
filter(etitanic, pclass == "1st" | pclass == "3rd")
titanic2 <- filter(etitanic, pclass == "1st" | pclass == "3rd")
tally(pclass ~ survived, data = titanic2)
titanic <- read_csv("titanic.csv")
library(readr)
titanic <- read_csv("titanic.csv")
titanic2 <- filter(etitanic, pclass == "1st" | pclass == "3rd")
tally(pclass ~ survived, data = titanic2)
titanic2 <- filter(titanic, pclass == "1st" | pclass == "3rd")
tally(pclass ~ survived, data = titanic2)
titanic_tab <- tally(pclass ~ survived, data = titanic2)
mosaicplot(titanic_tab)
titanic <- read.csv("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/titanic.csv")
View(titanic)
titanic2 <- filter(titanic, pclass == "1st" | pclass == "3rd")
titanic_tab <- tally(pclass ~ survived, data = titanic2)
titanic_tab
mosaicplot(titanic_tab)
titanic$pclass <- droplevels(titanic$pclass)
mosaicplot(titanic_tab)
titanic$pclass <- droplevels(titanic$pclass)
titanic_tab <- tally(pclass ~ survived, data = titanic2)
mosaicplot(titanic_tab)
titanic_tab <- tally(pclass ~ survived, data = titanic2)
titanic_tab
titanic_tab <- tally(pclass ~ survived, data = titanic)
titanic_tab
titanic2$pclass <- droplevels(titanic$pclass)
titanic2$pclass <- droplevels(titanic2$pclass)
titanic_tab <- tally(pclass ~ survived, data = titanic2)
mosaicplot(titanic_tab)
oddsRatio(titanic_tab)
titanic2 <- filter(titanic, pclass != "2nd")
titanic_tab <- tally(pclass ~ survived, data = titanic2)
titanic_tab
movies <- read.csv2("~/Documents/OneDrive/Literatur/Methoden_Literatur/Datensaetze/Daten_Unterricht/movies.csv")
View(movies)
write.csv(movies, file = "movies.csv")
movies2 <- read_csv("https://sebastiansauer.github.io/data/movies.csv")
